#include <stdio.h>
#include <windows.h>

int main() {
    STARTUPINFO si;
    PROCESS_INFORMATION pi;

    // Initialize memory for STARTUPINFO and PROCESS_INFORMATION
    ZeroMemory(&si, sizeof(si));
    si.cb = sizeof(si);
    ZeroMemory(&pi, sizeof(pi));

    // Create a new process (child process)
    if (!CreateProcess(
            NULL,                // Application name
            "notepad",           // Command line (you can change this to another program)
            NULL,                // Process handle not inheritable
            NULL,                // Thread handle not inheritable
            FALSE,               // Set handle inheritance to FALSE
            0,                   // No creation flags
            NULL,                // Use parent's environment block
            NULL,                // Use parent's starting directory
            &si,                 // Pointer to STARTUPINFO structure
            &pi                  // Pointer to PROCESS_INFORMATION structure
    )) {
        // If process creation fails
        printf("CreateProcess failed. Error: %d\n", GetLastError());
        return 1;
    }

    // Display process IDs
    printf("Parent Process ID: %lu\n", GetCurrentProcessId());
    printf("Child Process ID: %lu\n", pi.dwProcessId);

    // Wait until the child process exits
    WaitForSingleObject(pi.hProcess, INFINITE);

    // Close process and thread handles
    CloseHandle(pi.hProcess);
    CloseHandle(pi.hThread);

    return 0;
}
